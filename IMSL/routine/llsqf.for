C   IMSL ROUTINE NAME   - LLSQF
C
C-----------------------------------------------------------------------
C
C   LATEST REVISION     - JUNE 1, 1981
C
C   PURPOSE             - SOLUTION OF A LINEAR LEAST SQUARES PROBLEM
C
C   USAGE               - CALL LLSQF (A,IA,M,N,B,TOL,KBASIS,X,H,IP,IER)
C
C   ARGUMENTS    A      - M BY N COEFFICIENT MATRIX. (INPUT) A IS
C                           OVERWRITTEN WITH INFORMATION GENERATED BY
C                           LLSQF.  M.GE.N OR M.LT.N IS PERMITTED.
C                IA     - ROW DIMENSION OF MATRIX A EXACTLY AS
C                           SPECIFIED IN THE DIMENSION STATEMENT IN THE
C                           CALLING PROGRAM. (INPUT)
C                M      - NUMBER OF ROWS IN A AND B. (INPUT)
C                N      - NUMBER OF COLUMNS IN A. (INPUT)
C                B      - VECTOR OF LENGTH M. (INPUT/OUTPUT)
C                         ON INPUT, B CONTAINS THE RIGHT HAND SIDE
C                           OF THE LEAST SQUARES SOLUTION A*X = B.
C                         ON OUTPUT, THE RESIDUAL, R = B-A*X,
C                           OVERWRITES B.
C                TOL    - TOLERANCE PARAMETER TO DETERMINE THE
C                           NUMBER OF COLUMNS OF A TO BE INCLUDED IN
C                           THE BASIS FOR THE LEAST SQUARES FIT OF B.
C                           (INPUT/OUTPUT)
C                           COLUMN PIVOTING IS PERFORMED TO INTRODUCE
C                           COLUMNS OF A, ONE AT A TIME, INTO THE
C                           BASIS. AT EACH STEP, THE COLUMN THAT
C                           PRODUCES THE LARGEST REDUCTION OF THE
C                           RESIDUAL SUM OF SQUARES IS SELECTED.
C                           THE PROCESS IS TERMINATED IF INCLUSION
C                           OF THE NEXT COLUMN WOULD RESULT IN A
C                           MATRIX WITH CONDITION NUMBER GREATER
C                           THAN OR EQUAL TO 1.0/TOL. THE NUMBER OF
C                           COLUMNS IN THE RESULTING BASIS IS RETURNED
C                           IN KBASIS. TOL MUST NOT BE GREATER THAN 1.0.
C                           IF TOL=0.0 IS SPECIFIED, PIVOTING IS
C                           TERMINATED ONLY IF THE INCLUSION OF THE NEXT
C                           COLUMN WOULD RESULT IN A (NUMERICALLY) RANK
C                           DEFICIENT MATRIX.
C                           IF TOL=-1.0 IS SPECIFIED, THE CALCULATIONS
C                           TO DETERMINE THE CONDITION NUMBER ARE NOT
C                           PERFORMED.
C                           IF A CONDITION NUMBER IS CALCULATED, ITS
C                           RECIPROCAL IS RETURNED IN TOL. OTHERWISE,
C                           TOL IS NOT CHANGED.
C                KBASIS - INTEGER SCALAR. (INPUT/OUTPUT)
C                         ON INPUT, KBASIS=K IMPLIES THAT THE FIRST K
C                           COLUMNS OF A ARE TO BE FORCED INTO THE
C                           BASIS. PIVOTING IS PERFORMED ON THE LAST
C                           N-K COLUMNS OF A.
C                           WHEN KBASIS=N IS USED, PIVOTING IS NOT
C                           PERFORMED. THIS IS APPROPRIATE WHEN A IS
C                           KNOWN TO BE FULL RANK AND ALL COLUMNS OF A
C                           ARE TO BE INCLUDED IN THE BASIS.
C                           KBASIS=0 CAN BE USED WHEN PIVOTING IS
C                           DESIRED ON ALL COLUMNS OF A.
C                         ON OUTPUT, KBASIS GIVES THE NUMBER OF
C                           COLUMNS INCLUDED IN THE BASIS.
C                X      - SOLUTION VECTOR OF LENGTH N. (OUTPUT)
C                           IF THE J-TH COLUMN OF A IS OMITTED FROM
C                           THE BASIS, X(J) IS SET TO ZERO.
C                H      - WORK VECTOR OF LENGTH N.
C                IP     - WORK VECTOR OF LENGTH N.
C                IER    - ERROR PARAMETER. (OUTPUT)
C                         TERMINAL ERROR
C                           IER=129 INDICATES THAT M.LE.0 OR N.LE.0.
C                           IER=130 INDICATES THAT TOL.GT.1.0.
C
C   REQD. IMSL ROUTINES - SINGLE/UERTST,UGETIO,VBLA=SASUM,VBLA=SDOT,
C                           VBLA=SNRM2,VHS12
C                       - DOUBLE/UERTST,UGETIO,VBLA=DASUM,VBLA=DDOT,
C                           VBLA=DNRM2,VHS12
C
C   NOTATION            - INFORMATION ON SPECIAL NOTATION AND
C                           CONVENTIONS IS AVAILABLE IN THE MANUAL
C                           INTRODUCTION OR THROUGH IMSL ROUTINE UHELP
C
C   REMARKS  1.  IF IT IS DESIRED TO USE ALL COLUMNS OF A AS A BASIS
C                FOR A LEAST SQUARES FIT OF B AND IF THERE IS NO
C                CONCERN ABOUT A BEING ILL-CONDITIONED, THEN TOL
C                SHOULD BE SET TO 0.0, (OR TOL=-1.0 IF THE CONDITION
C                NUMBER IS NOT DESIRED) AND KBASIS SHOULD BE SET TO N
C                ON INPUT.
C            2.  IF IT IS POSSIBLE THAT A MAY NOT BE FULL RANK (I.E.,
C                CERTAIN COLUMNS OF A ARE LINEAR COMBINATIONS OF OTHER
C                COLUMNS), THEN THE LINEARLY DEPENDENT COLUMNS CAN
C                USUALLY BE ELIMINATED BY USING KBASIS=0 AND TOL =
C                RELATIVE PRECISION OF THE ELEMENTS A(I,J) AND B(J).
C                IF EACH ELEMENT IS CORRECT TO ,SAY, 5 DIGITS THEN
C                TOL=0.00001 SHOULD BE USED. ALSO, IT MAY BE HELPFUL
C                TO SCALE THE COLUMNS OF A SO THAT ALL ELEMENTS ARE
C                ABOUT THE SAME ORDER OF MAGNITUDE.
C                SEE THE LAWSON,HANSON REFERENCE GIVEN BELOW FOR MORE
C                DETAILS.
C
C-----------------------------------------------------------------------
C
      SUBROUTINE LLSQF (A,IA,M,N,B,TOL,KBASIS,X,H,IP,IER)
C
C                                  SPECIFICATIONS FOR ARGUMENTS
      INTEGER            IA,M,N,KBASIS,IP(N)
      REAL               A(IA,N),B(M),TOL,X(N),H(N)
C                                  SPECIFICATIONS FOR LOCAL VARIABLES
      INTEGER            I,IER,J,JCOL,JJ,JSTART,K,KP1,L,LDIAG,LMAX
      REAL               BB,DLOSS,DLOSSJ,RCOND,RCONDJ,RNORM,TMP,XNORM
      REAL               SASUM,SDOT,SNRM2
C                                  FIRST EXECUTABLE STATEMENT
      LDIAG = MIN0(M,N)
      IER = 129
      IF (LDIAG.LE.0) GO TO 9000
      IER = 130
      IF (TOL.GT.1.0) GO TO 9000
      IER = 0
      JSTART = MAX0(KBASIS+1,1)
      DO 35 J=1,LDIAG
         IP(J) = J
         IF (J.LE.KBASIS) GO TO 30
C                                  IF A(.,L) IS INCLUDED IN THE BASIS
C                                  AT THIS STAGE, THE RESIDUAL SUM OF
C                                  SQUARES WILL BE REDUCED BY
C                                  (X(L)/H(L))**2.  SO, SELECT L TO
C                                  MAXIMIZE THIS REDUCTION.
         LMAX = J
         IF (J.EQ.JSTART) GO TO 10
C                                  UPDATE COLUMN LENGTHS AND FIND LMAX
         DLOSSJ = 1.0
         IF (BB.EQ.0.0) GO TO 30
         TMP = BB
         BB = BB*SQRT(AMAX1(1.0-(B(J-1)/BB)**2,0.0))
         IF (BB.EQ.0.0) GO TO 30
         DLOSSJ = BB/TMP
         DO 5 L=J,N
            IF (H(L).EQ.0.0) GO TO 5
            TMP = H(L)
            H(L) = H(L)*SQRT(AMAX1(1.0-(A(J-1,L)/H(L))**2,0.0))
            DLOSSJ = AMIN1(DLOSSJ,H(L)/TMP)
            TMP = X(L)
            X(L) = 0.0
            IF (H(L).EQ.0.0) GO TO 5
            X(L) = TMP-A(J-1,L)*B(J-1)
            IF (H(LMAX).EQ.0.0) LMAX = L
            IF (ABS(X(L))/H(L).GT.ABS(X(LMAX))/H(LMAX)) LMAX = L
    5    CONTINUE
         DLOSS = DLOSS*DLOSSJ
         TMP = 10.0+DLOSS
         IF (TMP.GT.10.0) GO TO 20
C                                  COMPUTE COLUMN LENGTHS AND FIND LMAX
   10    BB = SNRM2(M-J+1,B(J),1)
         IF (BB.EQ.0.0) GO TO 30
         DO 15 L=J,N
            H(L) = SNRM2(M-J+1,A(J,L),1)
            X(L) = 0.0
            IF (H(L).EQ.0.0) GO TO 15
            X(L) = SDOT(M-J+1,A(J,L),1,B(J),1)
            IF (H(LMAX).EQ.0.0) LMAX = L
            IF (ABS(X(L))/H(L).GT.ABS(X(LMAX))/H(LMAX)) LMAX = L
   15    CONTINUE
         DLOSS = 1.0
C                                  LMAX HAS BEEN DETERMINED DO COLUMN
C                                    INTERCHANGES IF NEEDED.
   20    CONTINUE
         IP(J) = LMAX
         IF (LMAX.EQ.J) GO TO 30
         DO 25 I=1,M
            TMP = A(I,J)
            A(I,J) = A(I,LMAX)
            A(I,LMAX) = TMP
   25    CONTINUE
         H(LMAX) = H(J)
         X(LMAX) = X(J)
C                                  COMPUTE THE J-TH TRANSFORMATION AND
C                                    APPLY IT TO A AND B.
C
   30    JCOL = MIN0(J+1,N)
         CALL VHS12(1,J,J+1,M,A(1,J),1,H(J),A(1,JCOL),1,IA,N-J)
         CALL VHS12(2,J,J+1,M,A(1,J),1,H(J),B,1,M,1)
   35 CONTINUE
C                                  DETERMINE THE NUMBER OF COLUMNS OF A
C                                  TO BE INCLUDED IN THE BASIS SO THAT
C                                  COND(AK) .LT. 1/TOL
C                                  AK = FIRST K COLUMNS OF A AFTER
C                                       PIVOTING
C                                  RK = FIRST K COLUMNS OF R (Q*R = A)
C                                  COND(AK) = NORM1(RK)*NORM1(RK**(-1))
      RCOND = 0.0
      K = 0
C                                  RNORM = NORM1(RK)
      RNORM = 0.0
C                                  XNORM = NORM1(RK**(-1))
      XNORM = 0.0
      DO 55 J=1,LDIAG
         IF (ABS(A(J,J)).EQ.0.0) GO TO 60
         IF (TOL.LT.0.0) GO TO 50
         RNORM = AMAX1(RNORM,SASUM(J,A(1,J),1))
         X(J) = 1.0/A(J,J)
         IF (J.LT.2) GO TO 45
         I = J
         DO 40 L=2,J
            I = I-1
            X(I) = -SDOT(J-I,X(I+1),1,A(I,I+1),IA)/A(I,I)
   40    CONTINUE
   45    CONTINUE
         XNORM = AMAX1(XNORM,SASUM(J,X,1))
         RCONDJ = 1.0/(RNORM*XNORM)
         IF (TOL.GE.RCONDJ) GO TO 60
         RCOND = RCONDJ
   50    K = J
   55 CONTINUE
   60 KP1 = K+1
      KBASIS = K
      DO 65 J=1,N
   65 X(J) = 0.0
C                                  SPECIAL FOR KBASIS = 0
      IF (KBASIS.EQ.0) GO TO 90
C                                  SOLVE THE K BY K TRIANGULAR SYSTEM.
      X(K) = B(K)/A(K,K)
      IF (K.LT.2) GO TO 75
      I = K
      DO 70 L=2,K
         I = I-1
         X(I) = (B(I)-SDOT(K-I,X(I+1),1,A(I,I+1),IA))/A(I,I)
   70 CONTINUE
C                                  RE-ORDER THE SOLUTION VECTOR
   75 J = LDIAG+1
      DO 80 JJ=1,LDIAG
         J = J-1
         L = IP(J)
         IF (L.EQ.J) GO TO 80
         TMP = X(L)
         X(L) = X(J)
         X(J) = TMP
   80 CONTINUE
C                                  COMPUTE B - A*X
      DO 85 I=1,K
   85 B(I) = 0.0
   90 J = LDIAG+1
      DO 95 JJ=1,LDIAG
         J = J-1
         CALL VHS12(2,J,J+1,M,A(1,J),1,H(J),B,1,M,1)
   95 CONTINUE
      IF (TOL.GE.0.0) TOL = RCOND
      GO TO 9005
 9000 CONTINUE
      CALL UERTST(IER,6HLLSQF )
 9005 RETURN
      END
